'use strict';Object.defineProperty(exports,'__esModule',{value:!0});function toDMC(a){if(!a)return'';if(0>=Object.keys(a).length)return'';const{lat:b,lng:c}=a;if(null===b||null===c)return'';const d=parse(c),e=parse(b),f=toString(d),g=toString(e);return`${g} ${0<b?'N':'S'} ${f} ${0<c?'E':'W'}`}function toLatLon(a){return new Promise((b,c)=>{const d=/(\d+(?:\.\d+)?)[°:d\s]?\s?(?:(\d+(?:\.\d+)?)[']\s?(?:(\d{1,2})(?:cmin)?)?)?\s?([NSEW])?/i,e=a.match(d);console.log(e),e||c('Could not parse dmc string... Lat part invalid.');const f=a.substr(e[0].length-1).trim(),g=f.match(d);console.log(g),g||c('Could not parse dmc string... Lng part invalid.'),b({lat:toDecimal(e),lng:toDecimal(g)})})}function parse(a){var b=Math.floor;const c=Math.abs(a),d=b(c),e=60*(c-d),f=b(e),g=b(100*(e-f));return{degrees:d,minutes:f,centiminutes:g}}function toString({degrees:a,minutes:b,centiminutes:c}){return`${a}° ${b}' ${c}cmin`}function toDecimal(a){const b=parseInt(a[1],10),c=parseInt(a[2],10),d=parseInt(a[3],10),e=a[4];if(!isInRange(b,0,180))throw Error('degrees are not in range [0, 180]');if(!isInRange(c,0,60))throw Error('minutes are not in range [0, 60]');if(!isInRange(d,0,100))throw Error('centiminutes are not in range [0, 100]');const f=b+c/60+d/100;return'N'===e||'E'===e?f:-f}function isInRange(a,b,c){return a>=b&&a<=c}exports.toDMC=toDMC,exports.toLatLon=toLatLon;
